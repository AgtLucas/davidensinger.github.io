// ==========================================================================
// Mixins
// ==========================================================================

// Border
// ==========================================================================
@mixin border($border-or-hr, $direction) {
  @if $border-or-hr == 'border' {
    border-#{$direction}: 1px solid $border-color;
  } @elseif $border-or-hr == 'hr' {
    border-#{$direction}: 1px solid $hr-color;
  }
}

// Rem
// https://gist.github.com/webgefrickel/4530526
// ==========================================================================

// a small mixin for easy use of rem with px as fallback
// usage: @include rem(font-size, 14px)
// usage: @include rem(margin, 0 12px 2 1.2)
// usage: @include rem(padding, 1.5 24px)
// 
// thanks to Eric Meyer for https://github.com/ericam/susy
// and Hans Christian Reinl for http://drublic.de/blog/rem-fallback-sass-less/

@mixin rem($property, $values) {
  // Create a couple of empty lists as output buffers.
  $font-size: $base-font-size;
  $px-values: ();
  $rem-values: ();
 
  // Loop through the $values list
  @each $value in $values {
    // For each property value, if it's in rem or px, derive both rem and
    // px values for it and add those to the end of the appropriate buffer.
    // Ensure all pixel values are rounded to the nearest pixel.
    @if $value == 0 or $value == 0px {
      // 0 -- use it without a unit
      $px-values: join($px-values, 0);
      $rem-values: join($rem-values, 0);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
      // px value given - calculate rem value from font-size
      $new-rem-value: $value / $font-size;
      $px-values: join($px-values, round($value));
      $rem-values: join($rem-values, #{$new-rem-value}rem);
    } @else if $value == auto {
      // auto - don't add px or rem
      $px-values: join($px-values, auto);
      $rem-values: join($rem-values, auto);
    } @else {
      // unitless value - use those directly as rem and calculate the px-fallback
      $px-values: join($px-values, round($value * $font-size));
      $rem-values: join($rem-values, #{$value}rem);
    }
  }
 
  // output the converted rules
  #{$property}: $px-values;
  #{$property}: $rem-values;
}